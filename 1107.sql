-- 제약조건
-- NOT NULL
CREATE TABLE TABLE_NOTNULL(LOGIN_ID VARCHAR2(20) NOT NULL,
                           LOGIN_PWD VARCHAR2(20) NOT NULL,
                           TEL VARCHAR2(20) );
DESC TABLE_NOTNULL; 
INSERT INTO TABLE_NOTNULL VALUES ('TEST_ID_01', NULL, '010-123-5678'); -- 오류 (NULL값 입력X)
INSERT INTO TABLE_NOTNULL (LOGIN_ID, LOGIN_PWD) VALUES ('TEST_ID_01','1234');
SELECT * FROM TABLE_NOTNULL;
UPDATE TABLE_NOTNULL SET LOGIN_PWD=NULL WHERE LOGIN_ID='TEST_ID_01'; -- 오류 (NULL로 갱신X)
-- 제약조건 확인하는 데이터 사전(USER_CONSTRAINTS)
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;
-- 제약조건 이름 직접 지정
CREATE TABLE TABLE_NOTNULL2 (
  LOGIN_ID VARCHAR2(20) CONSTRAINT TBLNN2_LGNID_NN NOT NULL,
  LOGIN_PW VARCHAR2(20) CONSTRAINT TBLNN2_LGNPW_NN NOT NULL,
  TEL VARCHAR2(20) );
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS; -- DD
-- 이미 생성한 테이블에 제약조건 지정
SELECT * FROM TABLE_NOTNULL;
ALTER TABLE TABLE_NOTNULL MODIFY(TEL NOT NULL); -- 오류 (NULL값이 발견됨)
UPDATE TABLE_NOTNULL SET TEL='010-1234-5678' WHERE LOGIN_ID='TEST_ID_01'; -- 열 데이터 수정
ALTER TABLE TABLE_NOTNULL MODIFY(TEL NOT NULL); -- 변경 가능해짐
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS; -- DD
-- 제약조건에 이름 지정해서 추가
ALTER TABLE TABLE_NOTNULL2 MODIFY (TEL CONSTRAINT TBLNN_TEL_NN NOT NULL);
-- 생성한 제약조건의 이름 변경
ALTER TABLE TABLE_NOTNULL2 RENAME CONSTRAINT TBLNN_TEL_NN TO TBLNN2_TEL_NN;
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;
DESC TABLE_NOTNULL2;
-- 제약조건 삭제
ALTER TABLE TABLE_NOTNULL2 DROP CONSTRAINT TBLNN2_TEL_NN;
DESC TABLE_NOTNULL2;

-- 실습
CREATE TABLE DEPT_CONST (
  DEPTNO NUMBER(2) CONSTRAINT DEPTCONST_DEPTNO_NN NOT NULL,
  DNAME VARCHAR2(14) CONSTRAINT DEPTCONST_DNAME_NN NOT NULL,
  LOC VARCHAR2(13)
  );
DESC DEPT_CONST;
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

-- 제약조건
-- UNIQUE
CREATE TABLE TABLE_UNIQUE (
  LOGIN_ID VARCHAR2(20) UNIQUE,
  LOGIN_PWD VARCHAR2(20) NOT NULL,
  TEL VARCHAR2(20)
  );
DESC TABLE_UNIQUE;
-- 제약조건 확인
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS
  WHERE TABLE_NAME='TABLE_UNIQUE';
INSERT INTO TABLE_UNIQUE VALUES ('TEST_ID_01', 'PWD01', '010-1234-5678');
SELECT * FROM TABLE_UNIQUE;
INSERT INTO TABLE_UNIQUE VALUES ('TEST_ID_01', 'PWD01', '010-1234-5678'); -- 오류 (무결성 제약조건 위배-중복허용X)
INSERT INTO TABLE_UNIQUE VALUES ('TEST_ID_02', 'PWD01', '010-1234-5678');
INSERT INTO TABLE_UNIQUE VALUES (NULL, 'PWD01', '010-1234-5678');
UPDATE TABLE_UNIQUE SET LOGIN_ID = 'TEST_ID_01' WHERE LOGIN_ID IS NULL; -- 오류 (무결성 제약조건 위배-중복허용X)
-- 테이블 생성하며 제약조건 이름 직접 지정
CREATE TABLE TABLE_UNIQUE2 (
  LOGIN_ID VARCHAR2(20) CONSTRAINT TBLUNQ2_LGNID_UNQ UNIQUE,
  LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLUNQ2_LGNPW_NN NOT NULL,
  TEL VARCHAR2(20)
  );
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS
  WHERE TABLE_NAME='TABLE_UNIQUE2'; -- DD
-- 이미 생성한 테이블에 제약 조건 지정
SELECT * FROM TABLE_UNIQUE; 
ALTER TABLE TABLE_UNIQUE MODIFY(TEL UNIQUE); -- 오류 (제약 사용 불가 - 중복키(duplicate key)가 있음)
UPDATE TABLE_UNIQUE SET TEL=NULL;
ALTER TABLE TABLE_UNIQUE MODIFY(TEL UNIQUE); -- 변경 가능
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS
  WHERE TABLE_NAME='TABLE_UNIQUE'; -- DD
-- 제약조건에 이름 지정해서 추가
ALTER TABLE TABLE_UNIQUE2 MODIFY (TEL CONSTRAINT TBLUNQ_TEL_UNQ UNIQUE);
-- 생성한 제약조건의 이름 변경
ALTER TABLE TABLE_UNIQUE2 RENAME CONSTRAINT TBLUNQ_TEL_UNQ TO TBLUNQ2_TEL_UNQ;
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS
  WHERE TABLE_NAME LIKE 'TABLE_UNIQUE%';
-- 제약조건 삭제
ALTER TABLE TABLE_UNIQUE2 DROP CONSTRAINT TBLUNQ2_TEL_UNQ;

-- 실습
CREATE TABLE DEPT_CONST2 (
  DEPTNO NUMBER(2) CONSTRAINT DEPTCONST2_DEPTNO_UNQ UNIQUE,
  DNAME VARCHAR2(14) CONSTRAINT DEPTCONST2_DNAME_NN NOT NULL,
  LOC VARCHAR2(13)
  );
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS
  WHERE TABLE_NAME LIKE 'DEPT_CONST%';
DESC DEPT_CONST2;

-- 제약조건
-- PRIMARY KEY
CREATE TABLE TABLE_PK (
  LOGIN_ID VARCHAR2(20) PRIMARY KEY,
  LOGIN_PWD VARCHAR2(20) NOT NULL,
  TEL VARCHAR2(20)
  ); 
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS
  WHERE TABLE_NAME LIKE 'TABLE_PK%';
-- 생성한 PRIMARY KEY를 통해 자동 생성된 INDEX 확인
SELECT INDEX_NAME, TABLE_OWNER, TABLE_NAME FROM USER_INDEXES WHERE TABLE_NAME LIKE 'TABLE_PK%';
-- 테이블을 생성하며 제약조건 이름 직접 지정
CREATE TABLE TABLE_PK2 (
  LOGIN_ID NUMBER(20) CONSTRAINT TBLPK2_LGNID_PK PRIMARY KEY,
  LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLPK2_LGNPW_NN NOT NULL,
  TEL VARCHAR2(20)
  );
DESC TABLE_PK2;
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS
  WHERE TABLE_NAME LIKE 'TABLE_PK%';
SELECT INDEX_NAME, TABLE_OWNER, TABLE_NAME FROM USER_INDEXES WHERE TABLE_NAME LIKE 'TABLE_PK%';
-- PRIMARY KEY 제약조건을 지정한 열 확인(중복 값을 입력했을 때)
INSERT INTO TABLE_PK VALUES ('TEST_ID_01', 'PWD01', '010-1234-5678');
INSERT INTO TABLE_PK VALUES ('TEST_ID_01', 'PWD02', '010-1234-5678'); -- 오류 (무결성제약조건 위배-중복X)
-- PRIMARY KEY 제약조건을 지정한 열 확인(NULL 값을 입력했을 때)
INSERT INTO TABLE_PK VALUES (NULL, 'PWD02','010-1234-5678'); -- 오류 (NULL 입력X)
INSERT INTO TABLE_PK (LOGIN_PWD, TEL) VALUES ('PWD02','010-1234-5678');

-- 실습
CREATE TABLE DEPT_CONST3 (
  DPETNO NUMBER(2) CONSTRAINT DEPTCONST3_DEPTNO_PK PRIMARY KEY,
  DNAME VARCHAR2(14) CONSTRAINT DEPTCONST3_DNAME_UNQ UNIQUE,
  LOC VARCHAR2(13) CONSTRAINT DEPTCONST3_LOC_NN NOT NULL
  );
DESC DEPT_CONST3;
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS
  WHERE TABLE_NAME LIKE 'DEPT_CONST%';


-- 실습
-- BLAKE와 동일한 부서에 속한 사원의 이름과 입사일 (조인, BLAKE 제외)
/*SELECT E1.ENAME AS 사원명, E1.HIREDATE AS 입사일 
  FROM EMP E1, EMP E2
  WHERE E1.MGR = E2.EMPNO AND E2.ENAME='BLAKE';*/
SELECT E2.ENAME AS 사원명, E2.HIREDATE AS 입사일 
  FROM EMP E1, EMP E2
  WHERE E1.DEPTNO = E2.DEPTNO AND E1.ENAME='BLAKE' AND NOT E2.ENAME='BLAKE';
-- 이름에 'K'가 포함된 사원과 같은 부서에 일하는 사원의 사원번호와 이름
/*SELECT EMPNO AS 사원번호, ENAME AS 사원명 FROM EMP
  WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE ENAME LIKE '%K%');*/
SELECT DISTINCT(E2.EMPNO) AS 사원번호, E2.ENAME AS 사원명
  FROM EMP E1, EMP E2
  WHERE E1.DEPTNO=E2.DEPTNO AND E1.ENAME LIKE '%K%';
-- KING을 직속상사로 둔 사원의 이름과 급여 (조인)
SELECT E1.ENAME AS 사원명, E1.SAL AS 급여 
  FROM EMP E1, EMP E2
  WHERE E1.MGR = E2.EMPNO AND E2.ENAME='KING';
-- 평균 월급보다 적은 급여를 받고 이름에 M이 포함된 사원과 같은 부서에서 근무하는 사원의 사원번호, 이름, 급여 (서브쿼리)
SELECT EMPNO AS 사원번호, ENAME AS 이름, SAL AS 급여 FROM EMP
  WHERE SAL < (SELECT AVG(SAL) FROM EMP) AND ENAME LIKE '%M%';
-- 평균 급여가 가장 적은 업무
SELECT JOB AS 업무
  FROM (SELECT JOB FROM EMP GROUP BY JOB ORDER BY AVG(SAL) ASC)
  WHERE ROWNUM = 1;

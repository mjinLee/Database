SELECT * FROM EMP, DEPT ORDER BY EMPNO;
SELECT * FROM DEPT; -- deptno, dname, loc(주소)
-- SQL-99 이전
-- 등가 조인(INNER JOIN)
SELECT E.ENAME, E.DEPTNO AS EMP부서번호, D.DEPTNO AS DEPT부서번호 
  FROM EMP E, DEPT D 
  WHERE E.DEPTNO = D.DEPTNO
  ORDER BY EMPNO;
  SELECT E.EMPNO, E.ENAME, E.SAL, D.DEPTNO, D.DNAME, D.LOC 
  FROM EMP E, DEPT D 
  WHERE E.DEPTNO = D.DEPTNO AND SAL>=3000
  ORDER BY EMPNO;
-- 비등가 조인  
SELECT * FROM SALGRADE;
SELECT *
  FROM EMP E, SALGRADE S
  WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;
-- 자체 조인(SELF JOIN)
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS 상관사원번호, E2.ENAME AS 상관이름 FROM EMP E1, EMP E2
  WHERE E1.MGR = E2.EMPNO;
  -- 결과 : KING은 직속 상관이 없으므로 출력에서 제외됨
-- 외부 조인(OUTER JOIN)
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS 상관사원번호, E2.ENAME AS 상관이름 FROM EMP E1, EMP E2
  WHERE E1.MGR = E2.EMPNO(+); -- LEFT OUTER JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS 상관사원번호, E2.ENAME AS 상관이름 FROM EMP E1, EMP E2
  WHERE E1.MGR(+) = E2.EMPNO; -- RIGHT OUTER JOIN

-- SQL-99 표준
-- NATURAL JOIN
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, DEPTNO, D.DNAME, D.LOC
  FROM EMP E NATURAL JOIN DEPT D
  ORDER BY DEPTNO, E.EMPNO;
-- 비교) 등가조인
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, E.DEPTNO, D.DNAME, D.LOC
  FROM EMP E, DEPT D
  WHERE E.DEPTNO = D.DEPTNO
  ORDER BY DEPTNO, E.EMPNO;
  
-- JOIN ~ USING
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, DEPTNO, D.DNAME, D.LOC
  FROM EMP E JOIN DEPT D USING (DEPTNO)
  WHERE SAL >= 3000
  ORDER BY DEPTNO, E.EMPNO;

-- JOIN ~ ON
SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, E.DEPTNO, D.DNAME, D.LOC
  FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO)
  WHERE SAL <= 3000
  ORDER BY DEPTNO, E.EMPNO;
  
-- OUTER JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
  FROM EMP E1 LEFT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
  ORDER BY E1.EMPNO; -- LEFT OUTHER JOIN


-- Q1
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
  FROM EMP E, DEPT D
  WHERE D.DEPTNO = E.DEPTNO AND SAL > 2000
  ORDER BY D.DEPTNO;
SELECT DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
  FROM EMP E NATURAL JOIN DEPT D
  WHERE SAL > 2000
  ORDER BY DEPTNO;
-- Q2
SELECT D.DEPTNO, D.DNAME, TRUNC(AVG(SAL)) AS AVG_SAL, MAX(SAL) AS MAX_SAL, MIN(SAL) AS MIN_SAL, COUNT(*) AS CNT
  FROM EMP E, DEPT D
  WHERE E.DEPTNO = D.DEPTNO
  GROUP BY D.DEPTNO, D.DNAME;
SELECT DEPTNO, D.DNAME, TRUNC(AVG(SAL)) AS AVG_SAL, MAX(SAL) AS MAX_SAL, MIN(SAL) AS MIN_SAL, COUNT(*) AS CNT
  FROM EMP E JOIN DEPT D USING (DEPTNO)
  GROUP BY DEPTNO, D.DNAME;
-- Q3
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
  FROM EMP E, DEPT D
  WHERE E.DEPTNO(+) = D.DEPTNO
  ORDER BY D.DEPTNO, E.ENAME;
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
  FROM EMP E RIGHT OUTER JOIN DEPT D ON (D.DEPTNO = E.DEPTNO)
  ORDER BY DEPTNO, E.ENAME;

-- 실습
-- 1 등가조인을 사용하여 SCOTT 사원의 부서번호와 부서이름 출력
--SELECT * FROM EMP;
SELECT  E.ENAME AS 사원명, D.DEPTNO AS 부서번호, D.DNAME AS 부서이름
  FROM EMP E, DEPT D
  WHERE E.DEPTNO = D.DEPTNO AND E.ENAME = 'SCOTT';
-- 2 JOIN ON 연산자를 이용하여 사원이름과 함께 사원이 소속된 부서이름과 지역명을 출력
--SELECT * FROM DEPT;
SELECT E.ENAME AS 사원명, D.DNAME AS 부서이름, D.LOC AS 지역명
  FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO);
